create table version (version integer);
insert into version (version) values (0);
update version set version=1;
create table members (username text primary key,signedup integer,password text,name text,email text);
create unique index members_lower_email on members(lower(email));
create table posts (id integer primary key,time integer,owner text,ownername text,ancestry text,depth integer,descendants integer,subject text,body text);
create sequence posts_id_seq;
create index posts_ancestry on posts(ancestry);
create index posts_depth_ancestry on posts((depth||'/'||ancestry));
update version set version=2;
create sequence username_seq;
update version set version=3;
create table sessions (sid text,time integer,accesstime integer,username text);
create sequence sid_seq;
update version set version=4;
create table config (name text unique,value text);
update version set version=5;
create table projects (id integer primary key,creator text,time integer,name text,spec text,bounty integer,authority text);
create sequence projects_id_seq;
create table project_graph (parent integer,child integer,allotment integer);
create index project_graph_parent on project_graph(parent);
create index project_graph_child on project_graph(child);
create table donations (id integer primary key,time integer,owner text,method text,gross integer,net integer,transactionfee integer,ourfee integer,anonymous boolean);
update version set version=6;
create table member_donations (member text,project integer,amount integer,factor integer,assignee text);
create index member_donations_member on member_donations(member);
create unique index member_donations_project_member on member_donations((project||'/'||member));
create index member_donations_project_assignee on member_donations((project||'/'||assignee));
update version set version=7;
alter table projects rename column spec to reqmts;
update version set version=8;
create table project_reqmts_history (id integer,time integer,subject text,postid integer,action text);
create index project_reqmts_history_id on project_reqmts_history(id);
alter table projects add column reqmts_seq integer;
update version set version=9;
alter table posts add column status text;
update posts set status='pending' where body like E'%\n/-/-/-/-/-begin-diff-/-/-/-/-/\n%' and status isnull;
update version set version=10;
create table debates (id integer primary key,projectid integer,plaintiff text,subject text,body text,status text);
create sequence debates_id_seq;
create index debates_id on debates(id);
create index debates_projectid on debates(projectid);
create index debates_plaintiff on debates(plaintiff);
update version set version=11;
create index projects_authority on projects(authority);
update version set version=12;
create table submissions (id integer,projectid integer,username text,time integer,comments text,status text,numfiles integer);
create sequence submissions_id_seq;
create index submissions_id on submissions(id);
create index submissions_projectid on submissions(projectid);
create index submissions_username on submissions(username);
create table submission_files (id integer,seq integer,filename text,filesize integer,time integer);
create index submission_files_id on submission_files(id);
update version set version=13;
alter table submission_files add column description text;
update version set version=14;
create table post_attachments (postid integer,seq integer,filename text,filesize integer,description text);
create index post_attachments_id on post_attachments(postid);
alter table posts add column numattachments integer;
update version set version=15;
alter table members add column subscription_fee integer;
create table subscriptions (memberid integer, projectid integer, percentage integer, sequence integer);
update version set version=16;
alter table members add column subscription_time integer; 
update version set version=17;
alter table members add column type text;
update version set version=18;
alter table members add column pool integer;
update version set version=19;
create table watches (watchid integer, eventid integer, username integer, method text);
create sequence watches_id_seq;
update version set version=20;
drop table watches;
create table watches (watchid integer, eventid text, username integer, method text);
update version set version=21;
create table recent_events (eventid text, subject text, url text, body text, time integer);
update version set version=22;
drop table subscriptions;
create table subscriptions (username text, projectid int, percentage int, sequence int);
update version set version=23;
alter table projects add column status text;
update version set version=24;
alter table projects add column hold_endtime int;
update version set version=25;
alter table projects add column numattachments int;
update version set version=26;
alter table post_attachments add column projectid int;
update version set version=27; 
update projects set status='Pending' where status is null;
update projects set hold_endtime=0 where hold_endtime is null;
update version set version=28;
alter table members rename column pool to totaldonations;
update version set version=29;
update member_donations set amount=0;
update projects set bounty=0;
update members set totaldonations=0;
update version set version=30;
delete from member_donations;
update projects set bounty=0;
update members set totaldonations=0;
update version set version=31;
delete from member_donations;
update projects set bounty=0;
update members set totaldonations=0;
update version set version=32;
alter table projects add column payout_time int;
update version set version=33;
create function projstatus(integer) returns text as 'select status from submissions where projectid=$1 order by time desc limit 1' language sql;
update projects set status=projstatus(id) where id in (select distinct projectid from submissions);
update projects set status='pending' where status is null;
drop function projstatus(integer);
update version set version=34;
insert into watches select nextval('watches_id_seq'),'p'||cast(id as text)||'-newchore',cast(authority as integer),'default' from projects where authority != '' and 'p'||cast(id as text)||'-newchore' not in (select eventid from watches);
create table w (watchid integer,eventid text,username text,method text);
insert into w select watchid,eventid,cast(username as text),method from watches;
drop table watches;
alter table w rename to watches;
update version set version=35;
alter table projects rename column authority to coordinator;
drop index projects_authority;
create index projects_coordinator on projects(coordinator);
update version set version=36;
alter table donations add column ref text;
create sequence donations_id_seq;
create table recent_donation_ids (id text primary key,time integer);
update version set version=37;
alter table members add column resetcode text;
update version set version=38;
update watches set eventid=substring(eventid from 1 for length(eventid)-5)||'task' where eventid like '%chore';
update version set version=39;
update watches set eventid=substring(eventid from 1 for length(eventid)-4)||'duty' where eventid like '%task';
update recent_events set eventid=substring(eventid from 1 for length(eventid)-5)||'duty' where eventid like '%chore';
update version set version=40;
create index watches_eventid on watches(eventid);
update version set version=41;
create table members_tmp as select * from members;
drop table members;
alter table members_tmp rename to members;
create unique index members_lower_email on members(lower(email));
create unique index members_lower_username on members(lower(username));
update version set version=42;
create index watches_eventid_username on watches((eventid||'/'||username));
update version set version=43;
create table graph_cache (root integer,graph text,atime integer);
create unique index graph_cache_root on graph_cache(root);
alter table project_graph add column name text;
alter table project_graph add column status text;
create function projname(integer) returns text as 'select name from projects where id=$1' language sql;
update project_graph set name=projname(child);
drop function projname(integer);
create function projstatus(integer) returns text as 'select status from projects where id=$1' language sql;
update project_graph set status=projstatus(child);
drop function projstatus(integer);
update version set version=44;
alter table members rename column totaldonations to reserve;
update version set version=45;
create table credits (member text,project integer,credits integer);
create unique index credits_project_member on credits((project||'/'||member));
insert into credits (member,project,credits) select assignee,project,sum(amount) from member_donations group by assignee,project;
update version set version=46;
alter table credits add column numassigned integer;
create function numassigned(text) returns bigint as 'select count(*) from member_donations where assignee=$1 and member!=assignee' language sql;
update credits set numassigned=numassigned(member);
drop function numassigned(text);
create index coordinator_candidates on credits((project||(case when numassigned > 0 then 't' else 'f' end)));
update version set version=47;
create table duties (seq integer,project integer,type text,info text,created integer,time_allotment integer,deadline integer);
create index duties_project on duties(project,seq);
create index duties_deadline on duties(deadline);
create sequence duties_seq;
create function projcreated(integer) returns integer as 'select time from projects where id=$1' language sql;
insert into duties (seq,project,type,info,created,time_allotment) select nextval('duties_seq'),* from (select projectid,'debate-defendant',id,cast(substring(body from 1 for 10) as integer) as created,129600 from debates where status='defendant' union select parent,'new-subproject',child,projcreated(child) as created,129600 from project_graph where allotment is null union select projectid,'code submission',id,time as created,432000 from submissions where status='pending' union select cast(substring(ancestry from 8 for position('/' in ancestry)-8) as integer),'change proposal',id,time as created,129600 from posts where ancestry like 'reqmtsp%' and status='pending' order by created) foo;
drop function projcreated(integer);
update duties set deadline=created+time_allotment where seq in (select min(seq) from duties group by project);
update version set version=48;
create table access (token text,created integer,parent text,children integer,depth integer,ipaddr1 text,lastused1 integer,ipaddr2 text,lastused2 integer,username text);
create unique index access_token on access(token);
update version set version=49;
alter table projects rename column coordinator to lead;
drop index projects_coordinator;
create index projects_lead on projects(lead);
drop index coordinator_candidates;
create index lead_candidates on credits((project||(case when numassigned > 0 then 't' else 'f' end)));
update version set version=50;
alter table members add column payment_due integer;
update members set payment_due=subscription_time where subscription_fee > 0;
create index members_payment_due on members(payment_due);
update version set version=51;
alter table members add column auth text;
alter table sessions add column auth text;
create index sessions_username on sessions(username);
update version set version=52;
alter table access add column firstused integer;
update access set firstused=created where ipaddr1 is not null;
update version set version=53;
create index projects_status on projects(status);
update version set version=54;
alter table members add column owed integer;
update version set version=55;
alter table members add column vote integer;
update version set version=56;
create table featured_projects (id integer,votes integer,name text,bounty integer,effective integer);
create index members_vote on members(vote);
update version set version=57;
create table communitypot (amount integer);
insert into communitypot (amount) values (0);
update version set version=58;
drop index watches_eventid_username;
create unique index watches_eventid_username on watches((eventid||'/'||username));
update version set version=59;
create function numassigned(text,integer) returns bigint as 'select count(*) from member_donations where project=$2 and assignee=$1 and member!=assignee' language sql;
delete from credits;
insert into credits (member,project,credits,numassigned) select assignee,project,sum(amount),numassigned(assignee,project) from member_donations group by assignee,project;
drop function numassigned(text,integer);
update version set version=60;
update recent_events set eventid='watch:'||eventid where eventid not like '%-newduty';
update recent_events set eventid='lead:'||substring(eventid from 1 for length(eventid)-8) where eventid like '%-newduty';
update version set version=61;
create sequence recent_events_seq;
alter table recent_events add column seq integer;
alter table recent_events add column status text;
create index recent_events_seq_index on recent_events(seq);
update recent_events set seq=nextval('recent_events_seq'),status='sent';
create table notification_queue (id text,username text,url text,subject text,body text,method text);
create unique index notification_queue_id on notification_queue(id);
update version set version=62;
create table fix_factors_queue (id integer,member text,factor integer);
create sequence fix_factors_queue_seq;
create index fix_factors_queue_id on fix_factors_queue(id);
update version set version=63;
alter table submissions add column reject_reason text;
update version set version=64;
create table charities (id integer,name text,addr1 text,addr2 text,city text,province text,country text,postalcode text,contactname text,phone text,fax text,email text,description text,website text,current integer,total integer);
alter table members add column prefcharity integer;
insert into charities (id,name,addr1,addr2,city,province,country,postalcode,contactname,phone,fax,email,description,website,current,total) values (1,'Free Software Foundation','51 Franklin Street, Fifth Floor','','Boston','MA','US','02110-1301','','+1-617-542-5942','+1-617-542-2652','donate@fsf.org','The Free Software Foundation (FSF), established in 1985, is dedicated to promoting computer users'' rights to use, study, copy, modify, and redistribute computer programs. The FSF promotes the development and use of <a href=''http://www.fsf.org/licensing/essays/free-sw.html''>free software</a>, particularly the GNU operating system, used widely in its GNU/Linux variant.','http://www.fsf.org/',0,0);
insert into charities (id,name,addr1,addr2,city,province,country,postalcode,contactname,phone,fax,email,description,website,current,total) values (2,'Project Gutenberg','809 North 1500 West','','Salt Lake City','UT','US','84116','','','','help_AT_pglaf.org','Project Gutenberg is the first and largest single collection of free electronic books, or eBooks.  Their mission statement is "To encourage the creation and distribution of eBooks."  There are 20,000 free books in the Project Gutenberg Online Book Catalog.','http://www.gutenberg.org/',0,0);
insert into charities (id,name,addr1,addr2,city,province,country,postalcode,contactname,phone,fax,email,description,website,current,total) values (3,'Software in the Public Interest','P.O. Box 501248','','Indianapolis','IN','US','46250-6248','','','','president@spi-inc.org','SPI is a non-profit organization which was founded to help organizations develop and distribute open hardware and software. We encourage programmers to use any license that allows for the free modification, redistribution and use of software, and hardware developers to distribute documentation that will allow device drivers to be written for their product.','http://www.spi-inc.org/',0,0);
insert into charities (id,name,addr1,addr2,city,province,country,postalcode,contactname,phone,fax,email,description,website,current,total) values (4,'The Public Patent Foundation','1375 Broadway, Suite 600','','New York','NY','US','10018','','+1 (212) 796-0570','+1 (212) 591-6038','info@pubpat.org','The Public Patent Foundation (PUBPAT) is a not-for-profit legal services organization that represents the public''s interests against the harms caused by the patent system, particularly the harms caused by undeserved patents and unsound patent policy.  PUBPAT provides the general public and specific persons or entities otherwise deprived of access to the system governing patents with representation, education and advocacy.','http://www.pubpat.org/',0,0);
insert into charities (id,name,addr1,addr2,city,province,country,postalcode,contactname,phone,fax,email,description,website,current,total) values (5,'Open Source Initiative','P.O. Box 460008','','San Francisco','CA','US','94146-0008','Danese Cooper, OSI Treasurer','','','osi@opensource.org','Open Source Initiative (OSI) is a non-profit corporation dedicated to managing and promoting the Open Source Definition for the good of the community, specifically through the OSI Certified Open Source Software certification mark and program.','http://www.opensource.org/',0,0);
insert into charities (id,name,addr1,addr2,city,province,country,postalcode,contactname,phone,fax,email,description,website,current,total) values (6,'Software Freedom Law Center','1995 Broadway, 17th floor','','New York','NY','US','10023','','212-580-0800','212-580-0898','help@softwarefreedom.org','Software Freedom Law Center provides legal representation and other law-related services to protect and advance Free and Open Source Software.','http://www.softwarefreedom.org/',0,0);
update version set version=65;
alter table debates add column type text;
alter table debates add column object text;
update version set version=66;
alter table submissions add column payout_time_remaining integer;
update version set version=67;
create index sessions_sid on sessions(sid);
update version set version=68;
alter table debates_id rename to disputes_id;
alter table debates_pkey rename to disputes_pkey;
alter table debates_plaintiff rename to disputes_plaintiff;
alter table debates_projectid rename to disputes_projectid;
alter table debates_id_seq rename to disputes_id_seq;
alter table debates rename to disputes;
update version set version=69;
alter table disputes add column created integer;
alter table disputes add column concluded integer;
alter table disputes add column assignedto text;
alter table disputes add column decided integer;
alter table disputes add column decision text;
create index disputes_status_assignedto on disputes(status,assignedto);
update version set version=70;
alter table submissions add column reqmts text;
update submissions set reqmts=(select reqmts from projects where id=submissions.projectid);
update version set version=71;
alter table project_reqmts_history add column patch text;
update project_reqmts_history set patch=(select substring(body from position('/-/-/-/-/-begin-diff-/-/-/-/-/' in body)+31) from posts where id=project_reqmts_history.postid);
update version set version=72;
alter table projects add column direct_bounty integer;
update projects set direct_bounty=bounty;
create function get_bounty(integer) returns numeric as 'select (select direct_bounty from projects where id=$1) + coalesce((select sum(case when allotment=0 then 0 else floor(get_bounty(parent) * allotment / 1000) end) from project_graph where child=$1),0)' language sql;
update projects set bounty=get_bounty(id);
drop function get_bounty(integer);
update version set version=73;
alter table featured_projects rename column bounty to direct_bounty;
alter table featured_projects rename column effective to bounty;
update version set version=74;
alter table projects add column parent integer;
alter table projects add column allotment integer;
update projects set parent=(select parent from project_graph where child=id);
update projects set allotment=(select allotment from project_graph where child=id);
drop table project_graph;
create index projects_parent on projects(parent);
update version set version=75;
alter table projects add column root integer;
create index projects_root on projects(root);
create function get_root(integer) returns integer as 'select case when parent is null then $1 else get_root(parent) end from projects where id=$1' language sql;
update projects set root=get_root(id);
drop function get_root(integer);
update version set version=76;
drop table graph_cache;
update version set version=77;
alter table submissions add column held_amounts text;
alter table projects add column held_amounts text;
create function bounty_portion(integer,integer) returns integer as 'select case when $1=$2 then direct_bounty else bounty_portion(parent,$2)*allotment/1000 end from projects where id=$1' language sql;
create function get_held_amount(integer,integer) returns bigint as 'select case when $1 in (select projectid from submissions where projectid=$1 and status in (''pending'',''accept'')) then bounty_portion($1,$2) else (select coalesce(sum(bounty_portion(id,$2)),0) from projects where parent=$1) end' language sql;
create function get_held_amounts(integer,integer) returns text as 'select case when $2=root then '''' else get_held_amounts($1,parent)||'','' end || get_held_amount($1,$2) from projects where id=$2' language sql;
create function get_bounty(integer,integer) returns integer as 'select bounty_portion($1,$2) + case when $2=root then 0 else get_bounty($1,parent) end from projects where id=$2' language sql;
update submissions set held_amounts=get_held_amounts(projectid,projectid);
update projects set held_amounts=get_held_amounts(id,id),bounty=get_bounty(id,id);
drop function get_bounty(integer,integer);
drop function get_held_amounts(integer,integer);
drop function get_held_amount(integer,integer);
drop function bounty_portion(integer,integer);
update version set version=78;
alter table projects add column bounty_portions text;
create function bounty_portion(integer,integer) returns integer as 'select case when $1=$2 then direct_bounty else bounty_portion(parent,$2)*allotment/1000 end from projects where id=$1' language sql;
create function bounty_portions(integer,integer) returns text as 'select case when $2=root then '''' else bounty_portions($1,parent)||'','' end || bounty_portion($1,$2) from projects where id=$2' language sql;
update projects set bounty_portions=bounty_portions(id,id);
drop function bounty_portions(integer,integer);
drop function bounty_portion(integer,integer);
update version set version=79;
create table release_holds_queue (time integer,submission integer,projectid integer);
create index release_holds_queue_time on release_holds_queue(time,submission);
alter table projects drop column hold_endtime;
alter table submissions add column hold_endtime integer;
update version set version=80;
create sequence transaction_seq;
alter table communitypot add column xid integer;
create unique index communitypot_xid on communitypot(xid);
update communitypot set xid=0;
delete from communitypot where amount=0;
update version set version=81;
create function currencies(text) returns setof text as E'select * from (select regexp_replace($1,''^[^A-Z]*([A-Z]+).*'',E''\\\\1'') union select currencies(regexp_replace($1,''^[^A-Z]*[A-Z]+'',''''))) a where $1 ~ ''[A-Z]''' language sql immutable;
create function currency_value(text,text) returns numeric as E'select case when $1 ~ $2 then regexp_replace('' ''||$1,''^.*[^0-9.-]([0-9.-]+)''||$2||''.*$'',E''\\\\1'')::numeric else 0 end' language sql immutable;
create function concat(text,text) returns text as 'select $1||$2' language sql immutable;
create aggregate concat(text) (sfunc=concat,stype=text,initcond='');
create function add_money(text,text) returns text as 'select substring(concat(''+''||(currency_value($1,currencies)+currency_value($2,currencies))||currencies) from 2) from currencies(coalesce($1||$2,$1,$2))' language sql immutable;
create aggregate sum_money(text) (sfunc=add_money,stype=text,initcond='');
create function subtract_money(text,text) returns text as 'select substring(concat(''+''||(currency_value($1,currencies)-currency_value($2,currencies))||currencies) from 2) from currencies(coalesce($1||$2,$1,$2))' language sql immutable;
create function max_money(text,text) returns text as 'select substring(concat(''+''||greatest(currency_value($1,currencies),currency_value($2,currencies))||currencies) from 2) from currencies(coalesce($1||$2,$1,$2))' language sql immutable;
create function min_money(text,text) returns text as 'select substring(concat(''+''||least(currency_value($1,currencies),currency_value($2,currencies))||currencies) from 2) from currencies(coalesce($1||$2,$1,$2))' language sql immutable;
create function mult_round_money(text,numeric) returns text as 'select substring(concat(''+''||round(currency_value($1,currencies)*$2)||currencies) from 2) from currencies($1)' language sql immutable;
create function add_money_list(text,text) returns text as 'select add_money(regexp_replace($1,'',.*'',''''),regexp_replace($2,'',.*'',''''))||(select case when $1 like ''%,%'' then '',''||add_money_list(regexp_replace($1,''^[^,]*,'',''''),regexp_replace($2,''^[^,]*,'','''')) else '''' end)' language sql immutable strict;
create function subtract_money_list(text,text) returns text as 'select subtract_money(regexp_replace($1,'',.*'',''''),regexp_replace($2,'',.*'',''''))||(select case when $1 like ''%,%'' then '',''||subtract_money_list(regexp_replace($1,''^[^,]*,'',''''),regexp_replace($2,''^[^,]*,'','''')) else '''' end)' language sql immutable strict;
create function max_money_list(text,text) returns text as 'select max_money(regexp_replace($1,'',.*'',''''),regexp_replace($2,'',.*'',''''))||(select case when $1 like ''%,%'' then '',''||max_money_list(regexp_replace($1,''^[^,]*,'',''''),regexp_replace($2,''^[^,]*,'','''')) else '''' end)' language sql immutable strict;
create function min_money_list(text,text) returns text as 'select min_money(regexp_replace($1,'',.*'',''''),regexp_replace($2,'',.*'',''''))||(select case when $1 like ''%,%'' then '',''||min_money_list(regexp_replace($1,''^[^,]*,'',''''),regexp_replace($2,''^[^,]*,'','''')) else '''' end)' language sql immutable strict;
create function mult_round_money_list(text,numeric) returns text as 'select mult_round_money(regexp_replace($1,'',.*'',''''),$2)||(select case when $1 like ''%,%'' then '',''||mult_round_money_list(regexp_replace($1,''^[^,]*,'',''''),$2) else '''' end)' language sql immutable;
create aggregate sum_money_list(text) (sfunc=add_money_list,stype=text);
create aggregate max_money_list(text) (sfunc=max_money_list,stype=text);
create aggregate min_money_list(text) (sfunc=min_money_list,stype=text);
alter table charities rename column current to icurrent;
alter table charities add column current text;
update charities set current=icurrent||'CAD';
alter table charities drop column icurrent;
alter table charities rename column total to itotal;
alter table charities add column total text;
update charities set total=itotal||'CAD';
alter table charities drop column itotal;
alter table communitypot rename column amount to iamount;
alter table communitypot add column amount text;
update communitypot set amount=iamount||'CAD';
alter table communitypot drop column iamount;
drop table donations;
alter table featured_projects rename column direct_bounty to idirect_bounty;
alter table featured_projects add column direct_bounty text;
update featured_projects set direct_bounty=idirect_bounty||'CAD';
alter table featured_projects drop column idirect_bounty;
alter table featured_projects rename column bounty to ibounty;
alter table featured_projects add column bounty text;
update featured_projects set bounty=ibounty||'CAD';
alter table featured_projects drop column ibounty;
alter table member_donations rename column amount to iamount;
alter table member_donations add column amount text;
update member_donations set amount=iamount||'CAD';
alter table member_donations drop column iamount;
alter table members rename column subscription_fee to isubscription_fee;
alter table members add column subscription_fee text;
update members set subscription_fee=isubscription_fee||'CAD';
alter table members drop column isubscription_fee;
alter table members rename column reserve to ireserve;
alter table members add column reserve text;
update members set reserve=ireserve||'CAD';
alter table members drop column ireserve;
alter table members rename column owed to iowed;
alter table members add column owed text;
update members set owed=iowed||'CAD';
alter table members drop column iowed;
alter table projects rename column bounty to ibounty;
alter table projects add column bounty text;
update projects set bounty=ibounty||'CAD';
alter table projects drop column ibounty;
alter table projects rename column direct_bounty to idirect_bounty;
alter table projects add column direct_bounty text;
update projects set direct_bounty=idirect_bounty||'CAD';
alter table projects drop column idirect_bounty;
update version set version=82;
update members set reserve=add_money(reserve,owed);
alter table members drop column owed;
update version set version=83;
create table currencies (code text primary key,name text,decimal_places integer,credit_ratio numeric,exchange_rate numeric,updated integer);
insert into currencies values ('CAD','Canadian Dollar',2,1,1.0/1.0188,1203564178);
insert into currencies values ('EUR','Euro',2,1.5,1.4663,1203564178);
insert into currencies values ('USD','US Dollar',2,1,1,1203564178);
insert into currencies values ('INR','Indian Rupee',2,0.025,1.0/40.110,1203564178);
update version set version=84;
alter table currencies add column prefix text;
update currencies set prefix='CA $' where code='CAD';
update currencies set prefix='US $' where code='USD';
update currencies set prefix='EUR ' where code='EUR';
update currencies set prefix='INR ' where code='INR';
update version set version=85;
alter table members add column total_sponsorships text;
alter table members add column total_earnings text;
alter table members add column total_deductions text;
update members set total_sponsorships=(select sum_money(amount) from member_donations where member=members.username);
update currencies set prefix='C $' where code='CAD';
update version set version=86;
create table transaction_log (xid integer,split integer,time integer,account text,change text,ref text,description text);
create unique index transaction_log_xid_split on transaction_log(xid,split);
update version set version=87;
delete from currencies where code='INR';
insert into currencies (code,name,decimal_places,credit_ratio,exchange_rate,updated,prefix) values ('GBP','British Pound',2,2,1.99,1203564178,'GBP ');
update version set version=88;
alter table members add column last_subscr_gross text;
alter table members add column last_subscr_net text;
alter table members add column last_subscr_time integer;
alter table members add column last_subscr_xid integer;
alter table recent_donation_ids add column xid integer;
alter table members add column unl_creation_fee text;
update version set version=89;
alter table subscriptions drop column percentage;
alter table subscriptions add column amount text;
update members set subscription_fee=null,unl_creation_fee='';
update version set version=90;
create table sponsorship_queue (xid integer,projectid integer,username text,amount text);
create unique index sponsorship_queue_xid_projectid on sponsorship_queue(xid,projectid);
update version set version=91;
create table withdrawal_queue (xid integer,username text,email text,amount text,filename text);
create index withdrawal_queue_filename on withdrawal_queue(filename);
update version set version=92;
alter table member_donations add column credits numeric;
drop index member_donations_project_member;
drop index member_donations_project_assignee;
create unique index member_donations_project_member on member_donations(project,member);
create index member_donations_assignee_project on member_donations(assignee,project);
update member_donations set credits=factor*(currency_value(amount,'CAD')+currency_value(amount,'USD')+round(currency_value(amount,'EUR')*1.5)+currency_value(amount,'GBP')*2);
drop table credits;
update version set version=93;
alter table featured_projects add column abstract text;
update featured_projects set abstract=(select regexp_replace(reqmts,E'\n.*','') from projects where id=featured_projects.id);
update version set version=94;
create index post_attachments_projectid on post_attachments(projectid);
create table deferred_projects (tmpid integer primary key,creator text,name text,reqmts text,cost text);
update version set version=95;
insert into charities (id,name,addr1,city,province,country,postalcode,contactname,phone,fax,email,description,website,current,total) values (7,'Open Voting Consortium','9560 Windrose Lane','Granite Bay','CA','US','95746','Alan Dechert','916-772-5360','','alan@openvoting.org','The Open Voting Consortium is a not-for-profit organization dedicated to the development, maintenance, and delivery of trustable and open voting systems for use in public elections.','http://www.openvotingconsortium.org/','','');
update version set version=96;
alter table featured_projects add column usd_value numeric;
update version set version=97;
alter table sessions add column secure_sid text;
update version set version=98;
create table draft_projects (id integer primary key,modified integer,creator text,name text,reqmts text);
create index draft_projects_creator on draft_projects(creator);
update version set version=99;
drop table deferred_projects;
update version set version=100;
drop table access;
update version set version=101;
insert into config (name,value) values ('communitydeduction','4');
insert into config (name,value) values ('creation_base','10');
insert into config (name,value) values ('unl_creation_base','15');
insert into config (name,value) values ('cooloffperiod','72');
insert into config (name,value) values ('holdperiod','72');
insert into config (name,value) values ('paypal_webscr','fake-paypal-webscr.php');
insert into config (name,value) values ('paypal_business','jjgignac@fossfactory.org');
insert into config (name,value) values ('paypal_at','abcdefghijklmnopqrstuvwxyz');
insert into config (name,value) select 'debuguser','log' where 'debuguser' not in (select name from config);
insert into config (name,value) select 'secret','MY_BIG_SECRET' where 'secret' not in (select name from config);
update version set version=102;
alter table members drop column unl_creation_fee;
update version set version=103;
insert into config (name,value) values ('commission','5');
update version set version=104;
insert into watches (watchid,eventid,username,method) select nextval('watches_id_seq'),'news',username,'default' from members;
insert into watches (watchid,eventid,username,method) select nextval('watches_id_seq'),'promos',username,'default' from members;
update version set version=105;
create table project_votes (project integer,member text);
create index project_votes_project_member on project_votes(project,member);
insert into project_votes (project, member) select vote, username from members where vote is not null;
alter table members drop vote;
update version set version=106;
alter table project_votes rename to project_user_data;
alter table project_user_data add column has_voted smallint default '0';
update project_user_data set has_voted=1;
alter table project_user_data add column prev_funding_vote smallint default '0';
alter table projects add column funding_votes integer default '0';
alter table projects add column funding_goal text default null;
alter table projects add column funding_goal_orig text default null;
alter table draft_projects add column funding_goal integer default '0' not null;
update version set version=107;
alter table projects add column priority text;
update projects set priority='subproject';
update version set version=108;
alter table projects add column delete_time integer;
create index projects_delete_time on projects(delete_time);
update version set version=109;
insert into watches (watchid,eventid,username,method) select nextval('watches_id_seq'),'p'||id||'-news',lead,'default' from projects where lead!='' and 'p'||id||'-news' not in (select eventid from watches where username=lead);
update version set version=110;
